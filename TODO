### RoadMap
- [ ] Initialize the project
    - [X] Add `.editorconfig`
    - [X] Add `.gitignore`
    - [X] Add `.github/ISSUE_TEMPLATE/bug_report.md`
    - [X] Add `.github/ISSUE_TEMPLATE/feature_request.md`
    - [X] Add `.github/no-response.yml`
    - [X] Add `SECURITY.md`
    - [X] Add `TODO`
    - [X] Add `VERSION`
    - [X] Add `dist/img/logo.png`
    - [X] Update `README.md`
    - [X] Create directory `src`
    - [X] Create directory `docs`
    - [X] Create directory `example`
    - [X] Initialize Composer `composer init`
    - [X] Dump autoload `composer dump-autoload`
    - [ ] Perform initial push to GitHub
    - [ ] Create `stable` branch from `dev` branch on GitHub
    - [ ] Create a package on Packagist
    - [ ] Create a release on GitHub
- [X] Create the core class
    - [X] Create the `Core` class
    - [X] Create the `Core` class constructor
    - [X] Create the `Core` class destructor
    - [X] Create the `Core` class methods
    - [X] Create the `Core` class properties
    - [X] Create the `Core` class constants
    - [X] Create the `Core` class annotations
- [X] Create the `isInstalled` method in the `Core` class (optional)
- [ ] Integrations
    - [ ] Integration with coreLogger
    - [ ] Integration with coreInstaller (isInstalled method)
    - [ ] Integration with coreCLI
    - [ ] Integration with coreAPI
    - [ ] Integration with coreRouter
- [ ] Documentations
    - [X] Create the `docs/usage.md` file
    - [X] Create the directory `docs/methods`
    - [ ] Create a directory for each class in `docs/methods`
    - [ ] Create a markdown file for each method in `docs/methods/{class}`
- [ ] Clean up the code
    - [ ] Remove unnecessary files
    - [ ] Remove unnecessary code
    - [ ] Remove unnecessary comments
    - [ ] Remove unnecessary dependencies
    - [ ] Fix coding standards
    - [ ] Add method annotations
- [ ] Ready to publish
